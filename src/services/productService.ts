import axios from "axios";

const API_URL = "http://localhost:3001/products";

// üü¢ L·∫•y danh s√°ch s·∫£n ph·∫©m
export const getProducts = async () => {
  try {
    const response = await axios.get(API_URL);
    console.log("üîç API Response (Products):", response.data);
    return Array.isArray(response.data) ? response.data : [];
  } catch (error: any) {
    console.error("‚ùå L·ªói l·∫•y s·∫£n ph·∫©m:", error?.response?.data?.message || error.message || "L·ªói kh√¥ng x√°c ƒë·ªãnh");
    return [];
  }
};

// üü¢ Th√™m s·∫£n ph·∫©m m·ªõi
export const addProduct = async (product: any) => {
  try {
    const response = await axios.post(API_URL, product);
    console.log("‚úÖ Th√™m s·∫£n ph·∫©m th√†nh c√¥ng:", response.data);
    return response.data;
  } catch (error: any) {
    console.error("‚ùå L·ªói th√™m s·∫£n ph·∫©m:", error?.response?.data?.message || error.message || "L·ªói kh√¥ng x√°c ƒë·ªãnh");
    throw error; // N√©m l·ªói ƒë·ªÉ hi·ªÉn th·ªã message tr√™n giao di·ªán
  }
};

// üü¢ X√≥a s·∫£n ph·∫©m theo ID
export const deleteProduct = async (id: string) => {
  if (!id) {
    console.error("‚ùå Kh√¥ng t√¨m th·∫•y ID s·∫£n ph·∫©m ƒë·ªÉ x√≥a!");
    return;
  }
  try {
    await axios.delete(`${API_URL}/${id}`);
    console.log(`‚úÖ S·∫£n ph·∫©m c√≥ ID: ${id} ƒë√£ b·ªã x√≥a.`);
    return { success: true, id };
  } catch (error: any) {
    console.error(`‚ùå L·ªói x√≥a s·∫£n ph·∫©m (ID: ${id}):`, error?.response?.data?.message || error.message || "L·ªói kh√¥ng x√°c ƒë·ªãnh");
    throw error;
  }
};

// üü¢ C·∫≠p nh·∫≠t s·∫£n ph·∫©m theo ID
export const updateProduct = async (id: string, product: any) => {
  if (!id) {
    console.error("‚ùå Kh√¥ng t√¨m th·∫•y ID s·∫£n ph·∫©m ƒë·ªÉ c·∫≠p nh·∫≠t!");
    return;
  }
  try {
    const response = await axios.put(`${API_URL}/${id}`, product);
    console.log(`‚úÖ C·∫≠p nh·∫≠t s·∫£n ph·∫©m ID: ${id} th√†nh c√¥ng.`, response.data);
    return response.data;
  } catch (error: any) {
    console.error(`‚ùå L·ªói c·∫≠p nh·∫≠t s·∫£n ph·∫©m (ID: ${id}):`, error?.response?.data?.message || error.message || "L·ªói kh√¥ng x√°c ƒë·ªãnh");
    throw error;
  }
};
